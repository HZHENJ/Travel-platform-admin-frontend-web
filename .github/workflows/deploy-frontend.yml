name: Deploy Frontend to EC2 using Docker

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Pull code
        uses: actions/checkout@v3

      - name: Set up the Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies & build frontend
        run: |
          npm install
          npm run build
          ls -la dist/

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build a Docker image
        run: |
          docker build -t hzhenj/frontend-admin .
          docker tag hzhenj/frontend-admin:latest hzhenj/frontend-admin:latest

      - name: Push the Docker image to Docker Hub
        run: docker push hzhenj/frontend-admin:latest

      - name: SSH to EC2 and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Make sure Docker is installed
            if ! command -v docker &> /dev/null
            then
              echo "ðŸš€ Docker is not installed, start installing..."
              sudo apt update
              sudo apt install docker.io -y
              sudo systemctl start docker
              sudo systemctl enable docker
            else
              echo "âœ… Docker is installed"
            fi

            # Make sure the `ubuntu` user has Docker permissions
            if ! groups | grep -q "docker"
            then
              echo "ðŸ”‘ Granting Docker access to the ubuntu user..."
              sudo usermod -aG docker $USER
              newgrp docker
            else
              echo "âœ… Ubuntu users already have Docker permissions"
            fi

            # Pull the latest Docker image
            docker pull hzhenj/frontend-admin:latest

            # Forcefully delete existing `frontend-admin` container (whether running or not)
            if [ "$(docker ps -aq -f name=frontend-admin)" ]; then
              echo "Remove old frontend-admin container..."
              docker stop frontend-admin || true
              docker rm frontend-admin
            else
              echo "There is no frontend-admin container to delete"
            fi

            # Run the new container, using the Nginx proxy frontend
            echo "ðŸš€ Start new container..."
            docker run -d --name frontend-admin -p 9091:9091 hzhenj/frontend-admin:latest

            # Restart Nginx to apply proxy rules
            sudo systemctl restart nginx